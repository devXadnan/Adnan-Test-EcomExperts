 {% assign swatch_size = '2.5vw' %} 
 {% assign swatch_shape = 'round' %} 
 {% assign option_name = 'Color' %} 
 {% assign picker_type = picker_type %}
 {% assign img_link = white | file_url %}
 {% assign color_file = settings.colorSwatch | strip_html | prepend: '{' | append: '}' | downcase | parse_json %}
 {% assign img_file = settings.colorImg | strip_html | prepend: '{' | append: '}' | downcase | parse_json %}
 {%- unless product.has_only_default_variant -%}
   {%- if picker_type == 'button' -%}
     <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
       {%- for option in product.options_with_values -%}
         <fieldset {% if option.name == option_name %} class="swatchComponent" style=" padding: 0;" {% else %} class="js product-form__input" style="border:none" {% endif %}>
           {% if option.name == option_name %}
             <legend class="form__label">{{ option.name }}</legend>
     <div class="swatchContainer"> {% assign values = option.values %}
       {%- for value in option.values -%}
         <input class="inputColor" name="{{ option.name }}" value="{{ value | escape }}" form="product-form-{{ section.id }}" type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" {% if option.selected_value == value %}checked{% endif %}>
         <label class="labelColor" for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" data-color="{{value | downcase | replace: ' ', '-' }}" style="
          {% case swatch_shape %}
          {% when 'round' %} border-radius: 50%; aspect-ratio: 1;
          {% when 'square' %} aspect-ratio: 1;
          {% when 'rectangle' %} height: calc({{swatch_size}} / 2);
          {% when 'round-edge' %} border-radius: 15%; aspect-ratio: 1;
          {% endcase %}">
         </label>
       <div class="a infoColor">
         <img src="" alt="" data-info-image="{{value | downcase | replace: ' ', '-' }}">
         {{value | escape}}
       </div> {% endfor %}
     </div> {% else %} <legend class="form__label">{{ option.name }}</legend> {%- for value in option.values -%} <input type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" name="{{ option.name }}" value="{{ value | escape }}" form="product-form-{{ section.id }}" {% if option.selected_value == value %}checked{% endif %}>
     <label for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}">
       {{ value }}
     </label> {%- endfor -%} {% endif %}
   </fieldset> {% endfor -%} <script type="application/json">
   {{ product.variants | json }}
   </script>
 </variant-radios> {%- else -%} <variant-selects class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}> {%- for option in product.options_with_values -%} <fieldset class="swatchComponent" style=" padding: 0; {% if option.name != option_name %}display: none{% endif %}"> {% if option.name == option_name %} <legend class="form__label">{{ option.name }}</legend>
     <div class="swatchContainer"> {% assign values = option.values %} 
       {%- for value in option.values -%} 
         <input class="inputColor" name="{{ option.name }}" value="{{ value | escape }}" form="product-form-{{ section.id }}" type="radio" id="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" {% if option.selected_value == value %}checked{% endif %}>
       <label class="labelColor" for="{{ section.id }}-{{ option.name }}-{{ forloop.index0 }}" data-color="{{value | downcase | replace: ' ', '-' }}" style="
        {% case swatch_shape %}
        {% when 'round' %} border-radius: 50%; aspect-ratio: 1;
        {% when 'square' %} aspect-ratio: 1;
        {% when 'rectangle' %} height: calc({{swatch_size}} / 2);
        {% when 'round-edge' %} border-radius: 15%; aspect-ratio: 1;
        {% endcase %}">
       </label>
        {% endfor %}
     </div> {% endif %}
   </fieldset>
   <div class="product-form__input product-form__input--dropdown" {% if option.name == option_name %}style="display: none" {% endif %}>
     <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
       {{ option.name }}
     </label>
     <div class="select">
       <select id="Option-{{ section.id }}-{{ forloop.index0 }}" class="select__select" name="options[{{ option.name | escape }}]" form="{{ product_form_id }}"> {%- for value in option.values -%} <option value="{{ value | escape }}" {% if option.selected_value == value %}selected="selected" {% endif %}>
           {{ value }}
         </option> {%- endfor -%} </select> {% render 'icon-caret' %}
     </div>
   </div> {%- endfor -%} <script type="application/json">
   {{ product.variants | json }}
   </script>
 </variant-selects> {%- endif -%} {%- endunless -%} <noscript class="product-form__noscript-wrapper-{{ section.id }}">
   <div class="product-form__input{% if product.has_only_default_variant %} hidden{% endif %}">
     <label class="form__label" for="Variants-{{ section.id }}">{{ 'products.product.product_variants' | t }}</label>
     <div class="select">
       <select name="id" id="Variants-{{ section.id }}" class="select__select" form="{{ product_form_id }}"> {%- for variant in product.variants -%} <option {% if variant == product.selected_or_first_available_variant %}selected="selected" {% endif %} {% if variant.available == false %}disabled{% endif %} value="{{ variant.id }}">
           {{ variant.title }} {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %} - {{ variant.price | money | strip_html }}
         </option> {%- endfor -%} </select> {% render 'icon-caret' %}
     </div>
   </div>
 </noscript>



<!-- <script>
const path = window.location.pathname;
const variant = document.querySelector(`[data-url="${path}"]`);
const imgRaw = JSON.stringify("{{img_file}}");
const imgSplit = imgRaw.split(/[,]/).map(col => col.replace(/[\"\s{}]/g, '')).map(s => s.split('.'));
const imgJSON = Object.fromEntries(imgSplit);

for (const img in imgJSON) {
    const val = `${imgJSON[img]}`;
    const swatchImg = variant.querySelector(`[data-color="${img}"]`);
    const infoImg = variant.querySelector(`[data-info-image="${img}"]`);
    const imgLink = '{{img_link}}';

    if (swatchImg) {
        const imageName = `${img}.${val}`;
        const assetUrl = imgLink.split('?')[0] + `${imageName}`;
        swatchImg.style.backgroundImage = `url('${assetUrl}')`;

        if (infoImg) {
            infoImg.src = assetUrl;
            infoImg.style.display = 'block';
        }
    }
}


const colorRaw = JSON.stringify("{{color_file}}");
const colorSplit = colorRaw.split(/[,]/).map(col => col.replace(/[\"\s{}]/g, '')).map(s => s.split(':'));
const colorJSON = Object.fromEntries(colorSplit);
const labels = document.querySelectorAll('.labelColor');

for (const color in colorJSON) {
    const val = `${colorJSON[color]}`;
    const swatchColor = variant.querySelector(`[data-color="${color}"]`);
    const values = '{{values}}';

    if (swatchColor) {
        swatchColor.style.backgroundColor = val;
    }
}


labels.forEach((label) => {
    if (label.style.backgroundColor == '') {
        label.classList.add('no-background')
    }
})

const optionName = '{{option_name}}';
const radios = variant.querySelectorAll('.inputColor');
const select = variant.querySelector(`select[name='options[${optionName}]']`);

if (select) {
    radios.forEach((elem) => {
        elem.addEventListener("click", function(event) {
            var item = event.target.value;
            select.value = item;
        });
    });
}
</script> -->
<style>
    fieldset{
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
    user-select: none;
    }
    
    .swatchComponent {
    display: flex;
    margin: 5% 0;
    box-sizing: border-box;
    position: relative;
    border: none;
    }
    
    .swatchContainer {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    }
    
    .inputColor {
    display: none;
    }
    
    .labelColor {
    width: {{swatch_size}};
    margin: 1%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    overflow: hidden;
    transition: all .3s ease;
    }
    
    .no-background {
    background: repeating-linear-gradient(45deg, #e8e4e4, #e8e4e4 5px, #fff -2px, #fff 9px);
    background-position: center;
    background-size: 5vw;
    }
    
    .labelColor:hover{
    transform: scale(1.1);
    }
       
    .inputColor:checked + .labelColor + .infoColor {
    display: flex;
    }
    
    .inputColor:checked + .labelColor {
    outline: 1px solid;
    border: 3px solid white;
    }
</style>